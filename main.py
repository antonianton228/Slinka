# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'n.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import math
import numpy as np

from scipy.integrate import quad
import matplotlib.pyplot as plt





class Ui_MainWindow(object):
    def chto_to(self, k1=1, k2=0, M=0.05, N=20, sigma=30.18 * 10 ** -3, ro=1021.67, R=0.035, t=0.01, algoritm_type=0, m1=0.1, koeff=1.4):
        try:
            counter = 0
            v_l = []
            d_l = []
            d1_l = []
            t_l = []
            vr_l = []

            g = 9.81
            L0 = (M * g) / (2 * k1)
            znach1 = L0 * (N - 1) ** 2 / N ** 2
            znach2 = L0 * (N - 2) ** 2 / N ** 2
            L1 = L0 - znach1
            znach3 = znach1 - znach2

            start = -1

            def d(alpha):
                return (znach3 - L1) * alpha / (2 * math.pi) + L1


            if algoritm_type == 1:
                d_t = 2 * math.pi * (N - 1)
                d_k = d(2 * math.pi * (N - 1))
            else:
                d_t = 4 * math.pi
                d_k = d(4 * math.pi)

            def a_search():
                md1 = 100000
                a1 = 0
                for a in range(100, 350):
                    A_1 = a / 10000
                    r = A_1 * math.cosh(L1 / (4 * A_1))
                    if abs(r - R) < md1:
                        md1 = abs(r - R)
                        a1 = A_1
                return a1

            A = a_search()

            B = 2 * math.acosh(R/A)/(L1/2)

            def for_integral_Y(x):
                return A * math.cosh(B * x) * (1 + (A * B * math.sinh(B * x)) ** 2) ** 0.5

            Y = 2 * math.pi * N * quad(for_integral_Y, -L1 / 4, L1 / 4)[0]
            #
            # print(d(0), d(math.pi), d(2 * math.pi), d(4 * math.pi))
            # return
            while True:
                # if d_k != 0.02:
                #     print(V0, vR)
                #     return
                # counter += 1
                # print(d_t)
                # if counter == 40:
                #     return
                def a_search():
                    md1 = 100000
                    a1 = 0
                    for a in range(100, 350):
                        A_1 = a / 10000
                        r = A_1 * math.cosh(d_k / (2 * A_1))
                        if abs(r - R) < md1:
                            md1 = abs(r - R)
                            a1 = A_1
                    return a1

                A = a_search()

                B = 2 * math.acosh(R/A)/d_k



                m = N * koeff * 10 ** -3

                h = m / (ro * Y)

                def for_integral_Z(x):
                    return (A * math.cosh(B * x)) ** 2

                Z = quad(for_integral_Z, -d_k / 2, d_k / 2)[0]

                def for_integral_L(x):
                    return (1 + (A * B * math.sinh(B * x)) ** 2) ** 0.5

                L = quad(for_integral_L, -d_k / 2, d_k / 2)[0]

                if algoritm_type == 0:
                    a = ro * L * h * R * (math.pi / d_k) * (4 * math.pi ** 2 * Z / (d_k ** 2) + 1)
                    b = 4 * math.pi ** 2 * R ** 2 * k2 / d_k ** 2
                    c = -(m1 * g + (4 * sigma * L * math.pi * R) / d_k)
                    V0 = (-b + (b ** 2 - 4 * a * c) ** 0.5) / (2 * a)

                    a = ro * L * h * (Z / (2 * R ** 2) + (d_k ** 2) / (8 * math.pi * R**2))
                    b = k2
                    c = -(m1 * g * d_k / (2 * math.pi * R) + 2 * sigma * L)
                    vR = ((-b + (b ** 2 - 4 * a * c) ** 0.5) / (2 * a))

                    # counter += 1
                    # if counter == 40:
                    #     return
                    # print(B)


                else:
                    a = ro * L * h * R * (math.pi / d_k) * (4 * math.pi ** 2 * Z / (d_k ** 2) + 1)
                    b = 4 * math.pi ** 2 * R ** 2 * k2 / d_k ** 2
                    c = -(-m1 * 9.8 + (4 * sigma * L * math.pi * R) / d_k)
                    V0 = (-b + (b ** 2 - 4 * a * c) ** 0.5) / (2 * a)


                    a = ro * L * h * (Z / (2 * R ** 2) + (d_k ** 2) / (8 * math.pi * R ** 2))
                    b = k2
                    c = -(-m1 * 9.8 * d_k / (2 * math.pi * R) + 2 * sigma * L)
                    vR = ((-b + (b ** 2 - 4 * a * c) ** 0.5) / (2 * a))

                vr_l.append(vR)


                #
                # V0 = ((4 * sigma) / (ro * h * (1 + (Z * 4 * math.pi ** 2) / (d_k ** 2)))) ** 0.5


                if algoritm_type == 0:
                    d_t = vR * t / R + d_t
                else:
                    d_t = d_t - vR * t / R
                d_k = d(d_t)

                #print(d_k, V0, d_t)
                # counter += 1
                # if counter == 10:
                #     return
                if start == -1:
                    start = d_k
                new_proc = 100 - 100 * d_k / start
                self.textEdit.setText(str(round(new_proc, 5)) + ' %')
                if algoritm_type == 0:
                    d_l.append(d_t)
                else:
                    if d_l == []:
                        d_l.append(0)
                    else:
                        d_l.append(d_l[-1] + V0 * t / R)
                v_l.append(V0)

                d1_l.append(d_k)


                if t_l == []:
                    t_l.append(0)
                else:
                    t_l.append(t_l[-1] + t)
                # print('A, B, Y, Z, L, Vparal, Vrad, d')
                # print(A, B, Y, Z, L, V0, vR, d_k)

                if algoritm_type == 0:
                    if d_k <= 0.001:
                        break
                else:

                    if d_k >= L1:
                        break
                # d_l = []
                # while V0 > 0:
                #     v_l.append(V0)
                #     d_l.append(d(V0 * 1/ R + 4 * math.pi))
                #     V0 = V0 - d(V0 * 1/ R + 4 * math.pi)

                QtCore.QCoreApplication.processEvents()
            self.textEdit.setText(f'found {len(d_l)} values, saving')
            figure, axis = plt.subplots(2, 2)


            r_t = ''
            r_d = ''
            r_dv = ''
            r_tv = ''
            for i in range(len(d_l)):
                r_t += f'{t_l[i]};{v_l[i]}\n'
                r_d += f'{d_l[i]};{v_l[i]}\n'
                r_dv += f'{d_l[i]};{vr_l[i]}\n'
                r_tv += f'{t_l[i]};{vr_l[i]}\n'

            with open('v_d_lResult.csv', 'w') as f:
                f.write(r_d)
            with open('v_d_tResult.csv', 'w') as f:
                f.write(r_t)
            with open('vr_d_lResult.csv', 'w') as f:
                f.write(r_dv)
            with open('vr_d_tResult.csv', 'w') as f:
                f.write(r_tv)





            axis[0, 0].plot(d_l, v_l)
            axis[0, 0].set_title("v от alpha")

            axis[0, 1].plot(t_l, v_l)
            axis[0, 1].set_title("v от t")

            axis[1, 1].plot(t_l, vr_l)
            axis[1, 1].set_title("vr от t")

            axis[1, 0].plot(d_l, vr_l)
            axis[1, 0].set_title("vr от alpha")

            plt.show()

        except Exception as e:
            print(e.args)


    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1333, 895)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        self.label_8 = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(60)
        self.label_8.setFont(font)
        self.label_8.setAlignment(QtCore.Qt.AlignCenter)
        self.label_8.setObjectName("label_8")
        self.gridLayout.addWidget(self.label_8, 0, 0, 1, 1)
        self.verticalLayout_2 = QtWidgets.QVBoxLayout()
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.comboBox = QtWidgets.QComboBox(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(17)
        self.comboBox.setFont(font)
        self.comboBox.setObjectName("comboBox")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.verticalLayout_2.addWidget(self.comboBox)
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.label = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(15)
        self.label.setFont(font)
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setObjectName("label")
        self.horizontalLayout_2.addWidget(self.label)
        self.k1 = QtWidgets.QDoubleSpinBox(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.k1.sizePolicy().hasHeightForWidth())
        self.k1.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(15)
        self.k1.setFont(font)
        self.k1.setDecimals(10)
        self.k1.setObjectName("k1")
        self.horizontalLayout_2.addWidget(self.k1)
        self.verticalLayout.addLayout(self.horizontalLayout_2)
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.label_9 = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(15)
        self.label_9.setFont(font)
        self.label_9.setAlignment(QtCore.Qt.AlignCenter)
        self.label_9.setObjectName("label_9")
        self.horizontalLayout_4.addWidget(self.label_9)
        self.k2 = QtWidgets.QDoubleSpinBox(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.k2.sizePolicy().hasHeightForWidth())
        self.k2.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(15)
        self.k2.setFont(font)
        self.k2.setDecimals(10)
        self.k2.setObjectName("k2")
        self.horizontalLayout_4.addWidget(self.k2)
        self.verticalLayout.addLayout(self.horizontalLayout_4)
        self.horizontalLayout_8 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_8.setObjectName("horizontalLayout_8")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(15)
        self.label_2.setFont(font)
        self.label_2.setAlignment(QtCore.Qt.AlignCenter)
        self.label_2.setObjectName("label_2")
        self.horizontalLayout_8.addWidget(self.label_2)
        self.M = QtWidgets.QDoubleSpinBox(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)

        sizePolicy.setHeightForWidth(self.M.sizePolicy().hasHeightForWidth())
        self.M.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(15)
        self.M.setFont(font)
        self.M.setDecimals(10)
        self.M.setObjectName("M")
        self.M.setMaximum(1000000)
        self.horizontalLayout_8.addWidget(self.M)
        self.verticalLayout.addLayout(self.horizontalLayout_8)
        self.horizontalLayout_11 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_11.setObjectName("horizontalLayout_11")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(15)
        self.label_3.setFont(font)
        self.label_3.setAlignment(QtCore.Qt.AlignCenter)
        self.label_3.setObjectName("label_3")
        self.horizontalLayout_11.addWidget(self.label_3)
        self.N = QtWidgets.QDoubleSpinBox(self.centralwidget)
        self.N.setMaximum(100000)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.N.sizePolicy().hasHeightForWidth())
        self.N.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(15)
        self.N.setFont(font)
        self.N.setDecimals(10)
        self.N.setObjectName("N")
        self.horizontalLayout_11.addWidget(self.N)
        self.verticalLayout.addLayout(self.horizontalLayout_11)
        self.horizontalLayout_10 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_10.setObjectName("horizontalLayout_10")
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(15)
        self.label_4.setFont(font)
        self.label_4.setAlignment(QtCore.Qt.AlignCenter)
        self.label_4.setObjectName("label_4")
        self.horizontalLayout_10.addWidget(self.label_4)
        self.sigma = QtWidgets.QDoubleSpinBox(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.sigma.sizePolicy().hasHeightForWidth())
        self.sigma.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(15)
        self.sigma.setFont(font)
        self.sigma.setDecimals(10)
        self.sigma.setObjectName("sigma")
        self.horizontalLayout_10.addWidget(self.sigma)
        self.verticalLayout.addLayout(self.horizontalLayout_10)
        self.horizontalLayout_9 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_9.setObjectName("horizontalLayout_9")
        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(15)
        self.label_5.setFont(font)
        self.label_5.setAlignment(QtCore.Qt.AlignCenter)
        self.label_5.setObjectName("label_5")
        self.horizontalLayout_9.addWidget(self.label_5)
        self.ro = QtWidgets.QDoubleSpinBox(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ro.sizePolicy().hasHeightForWidth())
        self.ro.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(15)
        self.ro.setFont(font)
        self.ro.setDecimals(10)
        self.ro.setObjectName("ro")
        self.horizontalLayout_9.addWidget(self.ro)
        self.verticalLayout.addLayout(self.horizontalLayout_9)
        self.horizontalLayout_7 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_7.setObjectName("horizontalLayout_7")
        self.label_6 = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(15)
        self.label_6.setFont(font)
        self.label_6.setAlignment(QtCore.Qt.AlignCenter)

        self.label_6.setObjectName("label_6")
        self.horizontalLayout_7.addWidget(self.label_6)
        self.m = QtWidgets.QDoubleSpinBox(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.m.sizePolicy().hasHeightForWidth())
        self.m.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(15)
        self.m.setFont(font)
        self.m.setDecimals(10)
        self.m.setObjectName("m")
        self.horizontalLayout_7.addWidget(self.m)
        self.verticalLayout.addLayout(self.horizontalLayout_7)
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        self.label_7 = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(15)
        self.label_7.setFont(font)
        self.label_7.setAlignment(QtCore.Qt.AlignCenter)
        self.label_7.setObjectName("label_7")
        self.horizontalLayout_6.addWidget(self.label_7)
        self.r = QtWidgets.QDoubleSpinBox(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.r.sizePolicy().hasHeightForWidth())
        self.r.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(15)
        self.r.setFont(font)
        self.r.setDecimals(10)
        self.r.setObjectName("r")
        self.horizontalLayout_6.addWidget(self.r)
        self.verticalLayout.addLayout(self.horizontalLayout_6)
        self.horizontalLayout_12 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_12.setObjectName("horizontalLayout_12")
        self.label_10 = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(15)
        self.label_10.setFont(font)
        self.label_10.setAlignment(QtCore.Qt.AlignCenter)
        self.label_10.setObjectName("label_10")
        self.horizontalLayout_12.addWidget(self.label_10)
        self.t = QtWidgets.QDoubleSpinBox(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.t.sizePolicy().hasHeightForWidth())
        self.t.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(15)
        self.t.setFont(font)
        self.t.setDecimals(10)
        self.t.setObjectName("t")
        self.horizontalLayout_12.addWidget(self.t)
        self.verticalLayout.addLayout(self.horizontalLayout_12)

        self.horizontalLayout_13 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_13.setObjectName("horizontalLayout_13")
        self.label_11 = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(15)
        self.label_11.setFont(font)
        self.label_11.setAlignment(QtCore.Qt.AlignCenter)
        self.label_11.setObjectName("label_11")
        self.horizontalLayout_13.addWidget(self.label_11)
        self.m1 = QtWidgets.QDoubleSpinBox(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.m1.sizePolicy().hasHeightForWidth())
        self.m1.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(15)
        self.m1.setFont(font)
        self.m1.setDecimals(10)
        self.m1.setObjectName("t")
        self.horizontalLayout_13.addWidget(self.m1)
        self.verticalLayout.addLayout(self.horizontalLayout_13)


        self.verticalLayout_2.addLayout(self.verticalLayout)
        self.gridLayout.addLayout(self.verticalLayout_2, 1, 0, 1, 1)
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(40)
        self.pushButton.setFont(font)
        self.pushButton.setObjectName("pushButton")
        self.gridLayout.addWidget(self.pushButton, 2, 0, 1, 1)
        self.textEdit = QtWidgets.QTextEdit(self.centralwidget)
        self.textEdit.setEnabled(False)
        font = QtGui.QFont()
        font.setPointSize(30)
        self.textEdit.setFont(font)
        self.textEdit.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.textEdit.setObjectName("textEdit")
        self.gridLayout.addWidget(self.textEdit, 3, 0, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1333, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        self.m.setMaximum(1000000)
        self.m.setValue(1.4)
        self.k1.setMaximum(10000000)
        self.k1.setValue(0.26)
        self.k2.setMaximum(10000000)
        self.k2.setValue(0.78*10**-3)
        self.M.setMaximum(10000000)
        self.M.setValue(0.03535)
        self.N.setMaximum(100000000)
        self.N.setValue(37)
        self.sigma.setMaximum(100000000)
        self.sigma.setValue(0.03018)
        self.ro.setMaximum(10000000)
        self.ro.setValue(1021.67)
        self.r.setMaximum(100000)
        self.r.setValue(0.035)
        self.t.setMaximum(100000000)
        self.t.setValue(0.01)
        self.m1.setValue(0.03)
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        self.pushButton.clicked.connect(lambda x: self.chto_to(self.k1.value(), self.k2.value(), self.M.value(), self.N.value(), self.sigma.value(), self.ro.value(), self.r.value(), self.t.value(), self.comboBox.currentIndex(), self.m1.value(), self.m.value()))


        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label_8.setText(_translate("MainWindow", "Мыльноплёночная матмоделька буравчиков"))
        self.comboBox.setItemText(0, _translate("MainWindow", "Вниз по течению"))
        self.comboBox.setItemText(1, _translate("MainWindow", "Вверх по течению"))
        self.label.setText(_translate("MainWindow", "коэффициент упругости пружины(k1)"))
        self.label_9.setText(_translate("MainWindow", "коэффициент вязкого трения (k2)"))
        self.label_2.setText(_translate("MainWindow", "массу пружины (M)"))
        self.label_3.setText(_translate("MainWindow", "количество витков в пружине (N)"))
        self.label_4.setText(_translate("MainWindow", "коэфф поверхностного натяжения (сигма)"))
        self.label_5.setText(_translate("MainWindow", "плотность раствора (ро)"))
        self.label_6.setText(_translate("MainWindow", "масса плёнки (m)"))
        self.label_7.setText(_translate("MainWindow", "радиус слинки (R)"))
        self.label_10.setText(_translate("MainWindow", "изменение времени"))
        self.label_11.setText(_translate("MainWindow", "едущая масса"))
        self.pushButton.setText(_translate("MainWindow", "Начать работать"))
        self.textEdit.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
    "<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
    "p, li { white-space: pre-wrap; }\n"
    "</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:100pt; font-weight:400; font-style:normal;\">\n"
    "<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:72pt;\">0 %</span></p></body></html>"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())